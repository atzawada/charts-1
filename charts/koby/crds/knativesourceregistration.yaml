# Copyright (c) 2021 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# KnativeSourceRegistration
# Is the preferred registration when the outcome resource is a Knative Source.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: knativesourceregistrations.extensions.triggermesh.io
spec:
  group: extensions.triggermesh.io
  scope: Cluster
  names:
    kind: KnativeSourceRegistration
    singular: knativesourceregistration
    plural: knativesourceregistrations
    shortNames:
    - srcreg
    categories:
    - all
    - triggermesh
    - registrations
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds information about the component registration.
            type: object
            properties:

              generate:
                description: Group for CRD metadata generation.
                type: object
                properties:
                  names:
                    description: Group for CRD naming.
                    type: object
                    properties:
                      kind:
                        description: Kubernetes object Kind to be generated for the component.
                        type: string
                        pattern: '^[A-Z][\w]*$'
                      singular:
                        description: Kubernetes object name to be generated for the component.
                        type: string
                        pattern: '^[a-z0-9]*$'
                      plural:
                        description: Kubernetes object name in plural, to be generated for the component.
                        type: string
                        pattern: '^[a-z0-9]*$'
                    required:
                    - plural
                required:
                - names

              cloudEvents:
                description: CloudEvents options for the Knative source.
                type: object
                properties:
                  emitted:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          description: CloudEvent type attribute.
                          type: string
                        extensions:
                          type: object
                          additionalProperties:
                            type: string
                      required:
                      - type
                required:
                - emitted

              workload:
                description: Information on where to find component image or code.
                type: object
                properties:
                  fromImage:
                    description: Information on where to find container image for the component.
                    type: object
                    properties:
                      repo:
                        description: URI to download the container image.
                        type: string
                        pattern: '^[a-z]([a-z0-9]+[-._\/]?[a-z0-9]+)*(:[a-z0-9.]+)?(@[a-z0-9.]+:[a-f0-9]+)?$'
                    required:
                    - repo

                  formFactor:
                    description: Kubernetes objects that will run the user workload.
                    type: object
                    properties:
                      deployment:
                        description: Deployment properties
                        type: object
                        properties:
                          replicas:
                            type: integer
                            default: 1
                        required:
                        - replicas
                      knativeService:
                        description: Knative service properties
                        type: object
                        properties:
                          minScale:
                            type: integer
                            default: 0
                          maxScale:
                            type: integer
                            default: 0
                          visibility:
                            type: string
                            enum: ['cluster-local', 'public']
                            default: public
                        required:
                        - minScale
                    oneOf:
                    - required: ['deployment']
                    - required: ['knativeService']

                  parameterOptions:
                    type: object
                    description: Configures how parameters are passed from object to workload
                    properties:
                      arbitraryParameters:
                        description: |
                          Determines if arbitrary parameters added to spec are passed as
                          environment variables to the workload.
                        type: boolean
                        default: false
                      keyCasing:
                        description: |
                          When set turns the parameter key casing when being
                          used at the workload to UPPER or lower.
                        type: string
                        enum: ['upper', 'lower']
                      keyStyle:
                        description: |
                          When set turns the parameter key style when being
                          used at the workload to either snake_case or camelCase.
                        type: string
                        enum: ['snake', 'camel']
                      keyPrefix:
                        description: |
                          When set adds a prefix to the parameter key when being
                          used at the workload.
                        type: string
                required:
                - fromImage
                - formFactor

              configuration:
                description: Configuration elements for the registered component.
                type: object
                properties:
                  parameters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          description: Parameter name.
                          type: string
                        type:
                          description: Type for the parameter.
                          type: string
                        required:
                          description: Determines if the parameter is required.
                          type: boolean
                          default: false
                        valueFrom:
                          description: Reference to the source for the parameter.
                          type: object
                          properties:
                            referenceType:
                              description: Reference type to fill the parameter.
                              type: string
                              enum: [secret, configmap, downward]
                            fieldRef:
                              type: object
                              properties:
                                apiVersion:
                                  type: string
                                fieldPath:
                                  type: string
                              required:
                              - fieldPath
                          required:
                          - referenceType
                      oneOf:
                        - required: ['name','type']
                        - required: ['name','valueFrom']

              connection:
                description: Connection configuration elements for the registered component.
                type: object
                properties:
                  parameters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          description: Parameter name.
                          type: string
                        type:
                          description: Type for the parameter.
                          type: string
                        required:
                          description: Determines if the parameter is required.
                          type: boolean
                          default: false
                        valueFrom:
                          description: Reference to the source for the parameter.
                          type: object
                          properties:
                            referenceType:
                              description: Reference type to fill the parameter.
                              type: string
                              enum: [secret, configmap, downward]
                            fieldRef:
                              type: object
                              properties:
                                apiVersion:
                                  type: string
                                fieldPath:
                                  type: string
                              required:
                              - fieldPath
                          required:
                          - referenceType
                      oneOf:
                        - required: ['name','type']
                        - required: ['name','valueFrom']

            required:
            - generate
            - workload

          status:
            type: object
            properties:
              observedGeneration:
                type: integer
                format: int64
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum: ['True', 'False', Unknown]
                    severity:
                      type: string
                      enum: [Error, Warning, Info]
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                  required:
                  - type
                  - status

    additionalPrinterColumns:
    - name: Ready
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].status
    - name: Reason
      type: string
      jsonPath: .status.conditions[?(@.type=='Ready')].reason
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp