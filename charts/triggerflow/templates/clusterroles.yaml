# Copyright 2021-2023 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.rbac.create }}
# Aggregated Triggerflow controller roles.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "triggerflow.fullname" . }}-watcher
  labels:
    {{- include "triggerflow.labels" . | nindent 4 }}
rules:
# Read controller configurations
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - configmaps
  resourceNames:
  - config-logging
  - config-observability
  - config-leader-election
  - {{ include "triggerflow.fullname" . }}-config-triggerflow
  verbs:
  - get
  - watch

# Knative's sharedmain method supports leader election via coordination lease mechanism.
# This role is needed to let controller work with lease resources.
# https://docs.google.com/document/d/1zHtVjVmzivO2PEhZkpqNo-M9cPnmfvBWMYzP8ehVXtM/edit#
# https://github.com/knative/pkg/pull/1019
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - update
  - create

# bridges
- apiGroups:
  - flow.triggermesh.io
  resources:
  - bridges
  verbs:
  - list
  - watch

# knative core objects
- apiGroups:
  - serving.knative.dev
  - eventing.knative.dev
  - messaging.knative.dev
  - messaging.triggermesh.dev
  resources:
  - brokers
  - channels
  - configurations
  - revisions
  - routes
  - triggers
  - subscriptions
  - services
  - kinesischannels
  - inmemorychannels
  - clusterchannelprovisioners
  verbs:
  - list
  - watch

# knative sources
- apiGroups:
  - sources.knative.dev
  - sources.eventing.knative.dev
  - sources.eventing.triggermesh.dev
  - sources.triggermesh.io
  resources: ["*"]
  verbs:
  - list
  - watch

# knative targets
- apiGroups:
  - targets.triggermesh.io
  resources: ["*"]
  verbs:
  - list
  - watch

- apiGroups:
  - eventing.knative.dev
  resources:
  - kafkasinks
  verbs:
  - list
  - watch

# knative flow objects (transformations, routing)
- apiGroups:
  - flow.triggermesh.io
  resources: ["*"]
  verbs:
  - list
  - watch

# extensions objects
- apiGroups:
  - extensions.triggermesh.io
  resources: ["*"]
  verbs:
  - list
  - watch

---

# Aggregated Triggerflow controller roles.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "triggerflow.fullname" . }}
  labels:
    {{- include "triggerflow.labels" . | nindent 4 }}
rules:
# Manage bridges
- apiGroups:
  - flow.triggermesh.io
  resources:
  - bridges
  verbs:
  - get
  - list
  - watch
  - patch  # set finalizers
- apiGroups:
  - flow.triggermesh.io
  resources:
  - bridges/status
  verbs:
  - update

# Record Kubernetes events
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
  - update

# knative core objects
- apiGroups:
  - serving.knative.dev
  - eventing.knative.dev
  - messaging.knative.dev
  - messaging.triggermesh.dev
  resources:
  - brokers
  - channels
  - configurations
  - revisions
  - routes
  - triggers
  - subscriptions
  - services
  - kinesischannels
  - inmemorychannels
  - clusterchannelprovisioners
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - deletecollection
  - watch

# knative sources
- apiGroups:
  - sources.knative.dev
  - sources.eventing.knative.dev
  - sources.eventing.triggermesh.dev
  - sources.triggermesh.io
  resources: ["*"]
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - deletecollection
  - watch

# knative targets
- apiGroups:
  - targets.triggermesh.io
  resources: ["*"]
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - deletecollection
  - watch

- apiGroups:
  - eventing.knative.dev
  resources:
  - kafkasinks
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - deletecollection
  - watch

# knative flow objects (transformations, routing)
- apiGroups:
  - flow.triggermesh.io
  resources: ["*"]
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - deletecollection
  - watch

# extensions objects
- apiGroups:
  - extensions.triggermesh.io
  resources: ["*"]
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - deletecollection
  - watch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "triggerflow.fullname" . }}-triggermesh-flow-user
  labels:
    rbac.triggermesh.io/flow-user: "true"
    {{- include "triggerflow.labels" . | nindent 4 }}
rules:

# Manage bridges
- apiGroups:
  - flow.triggermesh.io
  resources:
  - bridges
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
{{- end }}
