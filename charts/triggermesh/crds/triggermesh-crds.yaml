apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.logs.log\" }\n\
      ]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awscloudwatchlogssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSCloudWatchLogsSource
    plural: awscloudwatchlogssources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon CloudWatch Logs.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Log Group to source data from. The expected
                    format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncloudwatchlogs.html#amazoncloudwatchlogs-resources-for-iam-policies
                  pattern: ^arn:aws(-cn|-us-gov)?:logs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon CloudWatch
                    Logs API. For more information about AWS security credentials,
                    please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                pollingInterval:
                  description: Duration which defines how often logs should be pulled
                    from Amazon CloudWatch Logs. Expressed as a duration string, which
                    format is documented at https://pkg.go.dev/time#ParseDuration.
                    Defaults to 5m
                  type: string
                sink:
                  description: The destination of events generated from Amazon CloudWatch
                    Logs.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.cloudwatch.metrics.message\"\
      \ },\n  { \"type\": \"com.amazon.cloudwatch.metrics.metric\" }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awscloudwatchsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSCloudWatchSource
    plural: awscloudwatchsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon CloudWatch.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                credentials:
                  description: Credentials to interact with the Amazon CloudWatch
                    API. For more information about AWS security credentials, please
                    refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                metricQueries:
                  description: List of queries that determine what metrics will be
                    sourced from Amazon CloudWatch. Each item represents an individual
                    MetricDataQuery. For more information, please refer to the CloudWatch
                    API reference at https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDataQuery.html
                  items:
                    oneOf:
                      - required:
                          - expression
                      - required:
                          - metric
                    properties:
                      expression:
                        description: Math expression to be performed on the metric
                          data. Mutually exclusive with 'metric'.
                        type: string
                      metric:
                        description: Representation of a metric with statistics, period,
                          and units, but no math expression. Mutually exclusive with
                          'expression'.
                        properties:
                          metric:
                            description: The metric to return.
                            properties:
                              dimensions:
                                description: Dimensions of the metric.
                                items:
                                  properties:
                                    name:
                                      description: Name of the dimension.
                                      type: string
                                    value:
                                      description: Value of the dimension.
                                      type: string
                                  type: object
                                type: array
                              metricName:
                                description: Name of the metric.
                                type: string
                              namespace:
                                description: Namespace of the metric.
                                type: string
                            type: object
                          period:
                            description: The granularity, in seconds, of the returned
                              data points.
                            type: integer
                          stat:
                            description: The statistic to return.
                            type: string
                          unit:
                            description: If specified, return only data with that
                              unit.
                            type: string
                        type: object
                      name:
                        description: Unique short name that identifies the query.
                        pattern: ^[a-z]\w{0,254}$
                        type: string
                    type: object
                  type: array
                pollingInterval:
                  description: Duration which defines how often metrics should be
                    pulled from Amazon CloudWatch. Expressed as a duration string,
                    which format is documented at https://pkg.go.dev/time#ParseDuration.
                    Defaults to 5m
                  type: string
                region:
                  description: Code of the AWS region to source metrics from. Available
                    region codes are documented in the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints.
                  pattern: ^[a-z]{2}(-gov)?-[a-z]+-\d$
                  type: string
                sink:
                  description: The destination of events generated from Amazon CloudWatch
                    metrics.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - region
                - metricQueries
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.codecommit.push\"\
      \ },\n  { \"type\": \"com.amazon.codecommit.pull_request\" }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awscodecommitsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSCodeCommitSource
    plural: awscodecommitsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon CodeCommit.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the CodeCommit repository to receive events
                    from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awscodecommit.html#awscodecommit-resources-for-iam-policies
                  pattern: ^arn:aws(-cn|-us-gov)?:codecommit:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                branch:
                  description: Name of the Git branch this source observes.
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon CodeCommit
                    API. For more information about AWS security credentials, please
                    refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                eventTypes:
                  description: List of event types that should be processed by the
                    source.
                  items:
                    enum:
                      - push
                      - pull_request
                    type: string
                  type: array
                sink:
                  description: The destination of events sourced from Amazon CodeCommit.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - branch
                - eventTypes
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.cognito-identity.sync_trigger\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awscognitoidentitysources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSCognitoIdentitySource
    plural: awscognitoidentitysources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon Cognito Identity Pool.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Amazon Cognito Identity Pool to receive
                    notifications from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncognitoidentity.html#amazoncognitoidentity-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:cognito-identity:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:identitypool\/.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon Cognito API.
                    For more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from the Amazon Cognito
                    Identity Pool.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.cognitouserpool.sync_trigger\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awscognitouserpoolsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSCognitoUserPoolSource
    plural: awscognitouserpoolsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon Cognito User Pool.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Amazon Cognito User Pool to receive notifications
                    from. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazoncognitouserpools.html#amazoncognitouserpools-resources-for-iam-policies
                  pattern: ^arn:aws(-cn|-us-gov)?:cognito-idp:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:userpool\/.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon Cognito API.
                    For more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from the Amazon Cognito
                    User Pool.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.dynamodb.stream_record\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awsdynamodbsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSDynamoDBSource
    plural: awsdynamodbsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon DynamoDB.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the DynamoDB table to receive modification events
                    from. The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazondynamodb.html#amazondynamodb-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:dynamodb:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:table\/.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon DynamoDB API.
                    For more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from Amazon DynamoDB.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.kinesis.stream_record\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awskinesissources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSKinesisSource
    plural: awskinesissources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon Kinesis.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Kinesis stream to receive data from. The
                    expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonkinesis.html#amazonkinesis-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:kinesis:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stream\/.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon Kinesis API.
                    For more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from Amazon Kinesis.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.rds.pi.metric\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awsperformanceinsightssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSPerformanceInsightsSource
    plural: awsperformanceinsightssources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon RDS Performance Insights.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Amazon RDS database instance to receive
                    metrics for. The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonrds.html#amazonrds-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:rds:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon RDS and Performance
                    Insights APIs. For more information about AWS security credentials,
                    please refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                metrics:
                  description: List of metrics to retrieve from Amazon Performance
                    Insights. Each item represents the 'metric' attribute of a MetricQuery.
                    For more information, please refer to the Performance Insights
                    API reference at https://docs.aws.amazon.com/performance-insights/latest/APIReference/API_MetricQuery.html
                  items:
                    minLength: 1
                    type: string
                  type: array
                pollingInterval:
                  description: Duration which defines how often metrics should be
                    pulled from Amazon Performance Insights. Expressed as a duration
                    string, which format is documented at https://pkg.go.dev/time#ParseDuration.
                  type: string
                sink:
                  description: The destination of events generated by Amazon Performance
                    Insights.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - pollingInterval
                - metrics
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.s3.objectcreated\"\
      \ },\n  { \"type\": \"com.amazon.s3.objectremoved\" },\n  { \"type\": \"com.amazon.s3.objectrestore\"\
      \ },\n  { \"type\": \"com.amazon.s3.reducedredundancylostobject\" },\n  { \"\
      type\": \"com.amazon.s3.replication\" },\n  { \"type\": \"com.amazon.s3.testevent\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awss3sources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSS3Source
    plural: awss3sources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.queueARN
          name: Queue
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon S3.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the S3 bucket to receive notifications from.
                    The expected format is 'arn:${Partition}:s3:${Region}:${Account}:${BucketName}'.
                    Although not technically required by S3, we enforce that bucket
                    ARNs include a region and an account ID, because this information
                    is required by the source to operate properly. See also https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html#amazons3-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:s3:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:[0-9a-z][0-9a-z.-]{2,62}$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon S3 and SQS
                    APIs. For more information about AWS security credentials, please
                    refer to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                eventTypes:
                  description: List of event types that the source should subscribe
                    to. Accepted values are listed at https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-event-types-and-destinations.html.
                  items:
                    enum:
                      - s3:ObjectCreated:*
                      - s3:ObjectCreated:Put
                      - s3:ObjectCreated:Post
                      - s3:ObjectCreated:Copy
                      - s3:ObjectCreated:CompleteMultipartUpload
                      - s3:ObjectRemoved:*
                      - s3:ObjectRemoved:Delete
                      - s3:ObjectRemoved:DeleteMarkerCreated
                      - s3:ObjectRestore:*
                      - s3:ObjectRestore:Post
                      - s3:ObjectRestore:Completed
                      - s3:ReducedRedundancyLostObject
                      - s3:Replication:*
                      - s3:Replication:OperationFailedReplication
                      - s3:Replication:OperationNotTracked
                      - s3:Replication:OperationMissedThreshold
                      - s3:Replication:OperationReplicatedAfterThreshold
                    type: string
                  type: array
                queueARN:
                  description: ARN of the Amazon SQS queue that should be receiving
                    notifications from the Amazon S3 bucket. When not provided, a
                    SQS queue is automatically created and associated with the bucket.
                    The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsqs.html#amazonsqs-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                sink:
                  description: The destination of events sourced from Amazon S3.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - eventTypes
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                queueARN:
                  description: ARN of the Amazon SQS queue that is currently receiving
                    notifications from the Amazon S3 bucket.
                  type: string
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.sns.notification\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awssnssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSSNSSource
    plural: awssnssources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon SNS.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Amazon SNS topic to consume messages from.
                    The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsns.html#amazonsns-resources-for-iam-policies
                  pattern: ^arn:aws(-cn|-us-gov)?:sns:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon SNS API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from Amazon SNS.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
                subscriptionAttributes:
                  description: Attributes to set on the Amazon SNS Subscription that
                    is used for receiving messages from the SNS topic.
                  properties:
                    DeliveryPolicy:
                      description: Policy that defines how Amazon SNS retries failed
                        deliveries to this event source.
                      format: json
                      nullable: true
                      type: string
                    FilterPolicy:
                      description: Rules for filtering the messages sent to this event
                        source.
                      format: json
                      nullable: true
                      type: string
                    RawMessageDelivery:
                      description: Whether to enable raw message delivery to this
                        event source.
                      format: json
                      nullable: true
                      type: string
                    RedrivePolicy:
                      description: Send undeliverable messages to the specified Amazon
                        SQS dead-letter queue.
                      format: json
                      nullable: true
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                address:
                  description: Public address of the HTTP/S endpoint that is subscribed
                    to the Amazon SNS topic.
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
                subscriptionARN:
                  description: ARN of the Amazon SNS subscription that is currently
                    used for receiving messages from the SNS topic.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.amazon.sqs.message\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awssqssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AWSSQSSource
    plural: awssqssources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Amazon SQS.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                arn:
                  description: ARN of the Amazon SQS queue to consume messages from.
                    The expected format is documented at https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsqs.html#amazonsqs-resources-for-iam-policies.
                  pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                credentials:
                  description: Credentials to interact with the Amazon SQS API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    accessKeyID:
                      description: Access key ID.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the access key ID.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the access key ID.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    secretAccessKey:
                      description: Secret access key.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the secret access key.
                          format: password
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret object containing
                            the secret access key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                  type: object
                receiveOptions:
                  description: Options that control the behavior of message receivers.
                  properties:
                    visibilityTimeout:
                      description: Period of time during which Amazon SQS prevents
                        other consumers from receiving and processing a message that
                        has been received via ReceiveMessage. Expressed as a duration
                        string, which format is documented at https://pkg.go.dev/time#ParseDuration.
                        If not defined, the overall visibility timeout for the queue
                        is used. For more details, please refer to the Amazon SQS
                        Developer Guide at https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html.
                      type: string
                  type: object
                sink:
                  description: The destination of events sourced from Amazon SQS.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - arn
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.microsoft.azure.monitor.activity-log\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azureactivitylogssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureActivityLogsSource
    plural: azureactivitylogssources
    singular: azureactivitylogssource
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Activity Logs.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                auth:
                  description: Authentication method to interact with the Azure Monitor
                    REST API. This event source only supports the Service Principal
                    authentication.
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For
                        more information about service principals, please refer to
                        the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      properties:
                        clientID:
                          description: ID of the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client secret.
                              format: password
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client secret.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the tenant ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                      type: object
                  required:
                    - servicePrincipal
                  type: object
                categories:
                  description: Categories of Activity Logs to collect. All available
                    categories are selected when this attribute is empty. For a list
                    of available Activity Logs category, please refer to https://docs.microsoft.com/en-us/azure/azure-monitor/platform/activity-log-schema#categories.
                  items:
                    type: string
                  type: array
                ceOverrides:
                  properties:
                    extensions:
                      additionalProperties:
                        minLength: 1
                        type: string
                      type: object
                  required:
                    - extensions
                  type: object
                eventHubID:
                  description: "Resource ID of either the Event Hubs instance or Event\
                    \ Hubs namespace to send activity logs to. This\nresource ID also\
                    \ conveniently contains the ID of the subscription which activity\
                    \ logs are to be\nsubscribed to.\n\nIf the resource ID represents\
                    \ an Event Hubs namespace, Azure automatically creates an Event\
                    \ Hub with\nthe name 'insights-activity-logs' inside that namespace.\
                    \ Otherwise, the user-provided Event Hub is\nused.\n\nAccepted\
                    \ formats are\n  - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventHubs/{eventHubName}\n\
                    \  - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}"
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}(?:\/eventHubs\/[a-zA-Z0-9][\w.-]{0,49})?$
                  type: string
                eventHubsSASPolicy:
                  description: Name of a SAS policy with Manage permissions inside
                    the Event Hubs namespace referenced in the EventHubID field. Defaults
                    to 'RootManageSharedAccessKey'.
                  pattern: ^[\w.-]+$'
                  type: string
                sink:
                  description: The destination of events sourced from Azure Activity
                    Logs.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - eventHubID
                - auth
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"Microsoft.Storage.BlobCreated\"\
      \ },\n  { \"type\": \"Microsoft.Storage.BlobDeleted\" },\n  { \"type\": \"Microsoft.Storage.BlobRenamed\"\
      \ },\n  { \"type\": \"Microsoft.Storage.DirectoryCreated\" },\n  { \"type\"\
      : \"Microsoft.Storage.DirectoryDeleted\" },\n  { \"type\": \"Microsoft.Storage.DirectoryRenamed\"\
      \ },\n  { \"type\": \"Microsoft.Storage.BlobTierChanged\" },\n  { \"type\":\
      \ \"Microsoft.Storage.AsyncOperationInitiated\" },\n  { \"type\": \"Microsoft.Storage.BlobInventoryPolicyCompleted\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azureblobstoragesources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureBlobStorageSource
    plural: azureblobstoragesources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Blob Storage.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                auth:
                  description: Authentication method to interact with the Azure Storage
                    and Azure Event Hubs REST APIs. This event source only supports
                    the Service Principal authentication.
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For
                        more information about service principals, please refer to
                        the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      properties:
                        clientID:
                          description: ID of the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client secret.
                              format: password
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client secret.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the tenant ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                      type: object
                  required:
                    - servicePrincipal
                  type: object
                eventHubID:
                  description: "Resource ID of either the Event Hubs instance or Event\
                    \ Hubs namespace to send events to.\n\nAccepted formats are\n\
                    \  - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventHubs/{eventHubName}\n\
                    \  - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}\n\
                    \nIf the resource ID represents an Event Hubs namespace, an Event\
                    \ Hubs instance is created on behalf of the user inside that namespace.\
                    \ Otherwise, the user-provided Event Hub is used."
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}(?:\/eventHubs\/[a-zA-Z0-9][\w.-]{0,49})?$
                  type: string
                eventTypes:
                  description: 'Types of events to subscribe to.


                    The list of available event types can be found at https://docs.microsoft.com/en-us/azure/event-grid/event-schema-blob-storage.


                    When this attribute is not set, the source automatically subscribes
                    to the following event types

                    - Microsoft.Storage.BlobCreated

                    - Microsoft.Storage.BlobDeleted'
                  items:
                    enum:
                      - Microsoft.Storage.BlobCreated
                      - Microsoft.Storage.BlobDeleted
                      - Microsoft.Storage.BlobRenamed
                      - Microsoft.Storage.DirectoryCreated
                      - Microsoft.Storage.DirectoryDeleted
                      - Microsoft.Storage.DirectoryRenamed
                      - Microsoft.Storage.BlobTierChanged
                      - Microsoft.Storage.AsyncOperationInitiated
                      - Microsoft.Storage.BlobInventoryPolicyCompleted
                    type: string
                  type: array
                sink:
                  description: The destination of events sourced from Azure Storage.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
                storageAccountID:
                  description: "Resource ID of the Storage Account to receive events\
                    \ for.\n\nThe accepted format is\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{storageAccountName}\n\
                    \nBesides the Storage Account name itself, the resource ID contains\
                    \ the subscription ID and resource group name which all together\
                    \ uniquely identify the Storage Account within Azure."
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.Storage\/storageAccounts\/[a-z0-9]{3,24}$
                  type: string
              required:
                - storageAccountID
                - eventHubID
                - auth
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                eventHubID:
                  description: Resource ID of the Event Hubs instance that is currently
                    receiving events from the Azure Storage Account.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: '[]

      '
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azureeventgridsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureEventGridSource
    plural: azureeventgridsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Event Grid.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                auth:
                  description: Authentication method to interact with the Azure Event
                    Grid and Azure Event Hubs REST APIs. This event source only supports
                    the Service Principal authentication.
                  properties:
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For
                        more information about service principals, please refer to
                        the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      properties:
                        clientID:
                          description: ID of the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client secret.
                              format: password
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client secret.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the tenant ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                      type: object
                  required:
                    - servicePrincipal
                  type: object
                eventHubID:
                  description: "Resource ID of either the Event Hubs instance or Event\
                    \ Hubs namespace to send events to.\n\nAccepted formats are\n\
                    \  - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventHubs/{eventHubName}\n\
                    \  - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}\n\
                    \nIf the resource ID represents an Event Hubs namespace, an Event\
                    \ Hubs instance is created on behalf of the user inside that namespace.\
                    \ Otherwise, the user-provided Event Hub is used."
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}(?:\/eventHubs\/[a-zA-Z0-9][\w.-]{0,49})?$
                  type: string
                eventTypes:
                  description: 'Types of events to subscribe to.


                    If not specified, Azure automatically selects all available event
                    types for the provided ''scope''.


                    For a list of all available event types, please refer to the list
                    of Azure services that support system topics at https://docs.microsoft.com/en-us/azure/event-grid/system-topics.'
                  items:
                    type: string
                  type: array
                scope:
                  description: "The resource ID the event subscription applies to.\n\
                    \nCan be\n- an Azure subscription\n  /subscriptions/{subscriptionId}\n\
                    - a resource group\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}\n\
                    - a top-level resource from a resource provider (including Event\
                    \ Grid topic)\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  pattern: ^\/subscriptions\/[a-z0-9-]+(?:\/resourceGroups\/[\w.()-]+(?:\/providers\/[A-Za-z.]+\/[a-zA-Z0-9][\w.-]+\/[a-zA-Z0-9][\w.-]+)?)?$
                  type: string
                sink:
                  description: The destination of events sourced from Azure Event
                    Grid.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - scope
                - eventHubID
                - auth
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                eventHubID:
                  description: Resource ID of the Event Hubs instance that is currently
                    receiving events from the Azure Event Grid subscription.
                  type: string
                eventSubscriptionID:
                  description: Resource ID of the Event Grid subscription that is
                    currently registered for the user-provided scope.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.azure.eventhub.event\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azureeventhubsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureEventHubSource
    plural: azureeventhubsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Event Hubs.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                auth:
                  description: Authentication method to interact with the Azure Event
                    Hubs REST API.
                  oneOf:
                    - required:
                        - sasToken
                    - required:
                        - servicePrincipal
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For
                        more information about SAS tokens, please refer to the Azure
                        Storage documentation at https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview.
                      oneOf:
                        - required:
                            - keyName
                            - keyValue
                        - required:
                            - connectionString
                      properties:
                        connectionString:
                          description: Connection string containing both the resource
                            URI of the Event Hubs instance, and the SAS token. Mutually
                            exclusive with 'keyName' and 'keyValue'.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the connection string.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        keyName:
                          description: Name of the key used by the SAS token. Mutually
                            exclusive with 'connectionString'.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal name of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the key's name.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        keyValue:
                          description: Value of the key used by the SAS token. Mutually
                            exclusive with 'connectionString'.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the key.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the key's value.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                      type: object
                    servicePrincipal:
                      description: Credentials of an Azure Service Principal. For
                        more information about service principals, please refer to
                        the Azure Active Directory documentation at https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals.
                      properties:
                        clientID:
                          description: ID of the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        clientSecret:
                          description: Secret associated with the registered client/application.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the client secret.
                              format: password
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the client secret.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                        tenantID:
                          description: ID of the Azure Active Directory tenant.
                          oneOf:
                            - required:
                                - value
                            - required:
                                - valueFromSecret
                          properties:
                            value:
                              description: Literal value of the tenant ID.
                              format: guid
                              pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the tenant ID.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                                - key
                              type: object
                          type: object
                      required:
                        - tenantID
                        - clientID
                        - clientSecret
                      type: object
                  type: object
                eventHubID:
                  description: "Resource ID of the Event Hubs instance.\n\nThe expected\
                    \ format is\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}"
                  pattern: ^\/subscriptions\/[a-z0-9-]+\/resourceGroups\/[\w.()-]+\/providers\/Microsoft.EventHub\/namespaces\/[A-Za-z0-9-]{6,50}\/event[Hh]ubs\/[a-zA-Z0-9][\w.-]{0,49}$
                  type: string
                sink:
                  description: The destination of events sourced from Azure Event
                    Hubs.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - eventHubID
                - auth
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.microsoft.azure.iothub.message\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azureiothubsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureIOTHubSource
    plural: azureiothubsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure IOT Hub.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                auth:
                  description: Authentication method to interact with the Azure IOT
                    Hub.
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For
                        more information about SAS tokens, please refer to the Azure
                        IOT Hub documentation at https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-dev-guide-sas?tabs=node.
                      properties:
                        connectionString:
                          description: Connection string containing both the resource
                            URI of the IOT Hub Bus instance, and the SAS token.
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the connection string.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from Azure IOT Hub.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - auth
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.microsoft.azure.queuestorage\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azurequeuestoragesources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureQueueStorageSource
    plural: azurequeuestoragesources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Queue Storage.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                accountKey:
                  description: A storage account access key for authenticating against
                    the Azure Storage REST API.
                  properties:
                    value:
                      description: Literal value of the account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the account key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                accountName:
                  description: Name of the storage account.
                  type: string
                queueName:
                  description: Name of the queue.
                  type: string
                sink:
                  description: The destination of events sourced from Azure Storage.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - accountName
                - accountKey
                - queueName
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                eventHubID:
                  description: Resource ID of the Event Hubs instance that is currently
                    receiving events from the Azure Storage Account.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.microsoft.azure.servicebus.queue.message\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: azureservicebusqueuesources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: AzureServiceBusQueueSource
    plural: azureservicebusqueuesources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Azure Service Bus Queue.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                auth:
                  description: Authentication method to interact with the Azure Service
                    Bus Queue.
                  properties:
                    sasToken:
                      description: An Azure shared access signature (SAS) token. For
                        more information about SAS tokens, please refer to the Azure
                        Service Bus Queue documentation at https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-sas.
                      properties:
                        connectionString:
                          description: Connection string containing both the resource
                            URI of the Event Service Bus instance, and the SAS token.
                          properties:
                            value:
                              description: Literal value of the connection string.
                              type: string
                            valueFromSecret:
                              description: A reference to a Kubernetes Secret object
                                containing the connection string.
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
                sink:
                  description: The destination of events sourced from Azure Service
                    Bus Queue.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - auth
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.google.cloud.auditlogs.notification\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudauditlogssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: GoogleCloudAuditLogsSource
    plural: googlecloudauditlogssources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Audit Logs.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                methodName:
                  description: The name of the service method or operation. For API
                    calls, this should be the name of the API method. For example,
                    "google.pubsub.v1.Publisher.CreateTopic".
                  pattern: ^[A-Za-z\d][A-Za-z\d\-\.]*[A-Za-z\d]$
                  type: string
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub
                    resources associated with the Cloud Audit Log.
                  oneOf:
                    - required:
                        - project
                    - required:
                        - topic
                  properties:
                    project:
                      description: Name of the GCP project where Pub/Sub resources
                        associated with the Cloud Audit log sink are to be created.
                        Mutually exclusive with 'topic' which, if supplied, already
                        contains the project name.
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                      type: string
                    topic:
                      description: Full resource name of the Pub/Sub topic where change
                        notifications originating from the configured audit logs sink
                        are sent to. If not supplied, a topic is created on behalf
                        of the user, in the GCP project referenced by the 'project'
                        attribute. The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                      type: string
                  type: object
                resourceName:
                  description: The resource or collection that is the target of the
                    operation. The name is a scheme-less URI, not including the API
                    service name. https://cloud.google.com/logging/docs/reference/audit/auditlog/rest/Shared.Types/AuditLog
                  pattern: ^[a-z\d][a-z\d\-\.\/]*[a-z\d]$
                  type: string
                serviceAccountKey:
                  description: Service account key used to authenticate the event
                    source and allow it to interact with Google Cloud APIs. Only the
                    JSON format is supported.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the service account key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                serviceName:
                  description: The name of the API service performing the operation.
                    For example, "pubsub.googleapis.com".
                  pattern: ^[a-z\d][a-z\d\-\.]*[a-z\d]$
                  type: string
                sink:
                  description: The destination of events received via change notifications.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - serviceName
                - methodName
                - pubsub
                - serviceAccountKey
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                auditLogsSink:
                  description: ID of the Cloud Audit Logs Sink.
                  type: string
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently
                    used by the event source for pulling audit logs.
                  type: string
                topic:
                  description: Resource name of the Pub/Sub topic where audit logs
                    are currently sent to.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.google.cloud.billing.notification\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudbillingsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: GoogleCloudBillingSource
    plural: googlecloudbillingsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Billing.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                billingAccountId:
                  description: The identifier for the Cloud Billing account owning
                    the budget. Example, 01D4EE-079462-DFD6EC.
                  type: string
                budgetId:
                  description: The identifier for the Cloud Billing budget. You can
                    locate the budget's ID in your budget under Manage notifications.
                    The ID is displayed after you select Connect a Pub/Sub topic to
                    this budget. Example, de72f49d-779b-4945-a127-4d6ce8def0bb.
                  type: string
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub
                    resources associated with the Cloud Billing.
                  oneOf:
                    - required:
                        - project
                    - required:
                        - topic
                  properties:
                    project:
                      description: Name of the GCP project where Pub/Sub resources
                        associated with the Cloud Billing are to be created. Mutually
                        exclusive with 'topic' which, if supplied, already contains
                        the project name.
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                      type: string
                    topic:
                      description: Full resource name of the Pub/Sub topic where notifications
                        originating from the configured billing budget are sent to.
                        If not supplied, a topic is created on behalf of the user,
                        in the GCP project referenced by the 'project' attribute.
                        The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                      type: string
                  type: object
                serviceAccountKey:
                  description: Service account key used to authenticate the event
                    source and allow it to interact with Google Cloud APIs. Only the
                    JSON format is supported.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the service account key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                sink:
                  description: The destination of events received via change notifications.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - billingAccountId
                - budgetId
                - pubsub
                - serviceAccountKey
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently
                    used by the event source for pulling billing budget events.
                  type: string
                topic:
                  description: Resource name of the Pub/Sub topic where billing budget
                    events are currently sent to.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.google.cloud.pubsub.message\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudpubsubsources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: GoogleCloudPubSubSource
    plural: googlecloudpubsubsources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.subscription
          name: Subscription
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Pub/Sub.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                serviceAccountKey:
                  description: Service account key used to authenticate the event
                    source and allow it to interact with Google Cloud APIs. Only the
                    JSON format is supported.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the service account key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                sink:
                  description: The destination of events received via change notifications.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
                subscriptionID:
                  description: ID of the subscription to use to pull messages from
                    the topic. If supplied, this subscription must 1) exist and 2)
                    belong to the provided topic. Otherwise, a pull subscription to
                    that topic is created on behalf of the user.
                  pattern: ^[a-zA-Z][\w-.~%+]{2,254}$
                  type: string
                topic:
                  description: Full resource name of the Pub/Sub topic to subscribe
                    to, in the format "projects/{project_name}/topics/{topic_name}".
                  pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                  type: string
              required:
                - topic
                - serviceAccountKey
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently
                    used by the event source for pulling messages from the topic.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.google.cloud.repositories.notification\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudrepositoriessources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: GoogleCloudRepositoriesSource
    plural: googlecloudrepositoriessources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Source Repositories.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub
                    resources associated with the Cloud Repositories.
                  oneOf:
                    - required:
                        - project
                    - required:
                        - topic
                  properties:
                    project:
                      description: Name of the GCP project where Pub/Sub resources
                        associated with the Cloud Repo are to be created. Mutually
                        exclusive with 'topic' which, if supplied, already contains
                        the project name.
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                      type: string
                    topic:
                      description: Full resource name of the Pub/Sub topic where change
                        notifications originating from the configured repo are sent
                        to. If not supplied, a topic is created on behalf of the user,
                        in the GCP project referenced by the 'project' attribute.
                        The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                      type: string
                  type: object
                repository:
                  description: Full resource name of the Repository.
                  pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/repos\/[a-zA-Z][\w-.~%+]{2,254}$
                  type: string
                serviceAccountKey:
                  description: Service account key used to authenticate the event
                    source and allow it to interact with Google Cloud APIs. Only the
                    JSON format is supported.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the service account key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                sink:
                  description: The destination of events received via change notifications.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - repository
                - pubsub
                - serviceAccountKey
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently
                    used by the event source for pulling events from repositories.
                  type: string
                topic:
                  description: Resource name of the Pub/Sub topic where repositories
                    events are currently sent to.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.google.cloud.storage.notification\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudstoragesources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: GoogleCloudStorageSource
    plural: googlecloudstoragesources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Google Cloud Storage.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                bucket:
                  description: Name of the Cloud Storage bucket to receive change
                    notifications from. Must meet the naming requirements described
                    at https://cloud.google.com/storage/docs/naming-buckets
                  pattern: ^[a-z0-9][a-z0-9_-]{1,61}[a-z0-9](\.[a-z0-9][a-z0-9_-]{1,61}[a-z0-9])*$
                  type: string
                eventTypes:
                  description: Types of events to receive change notifications for.
                    Accepted values are listed at https://cloud.google.com/storage/docs/pubsub-notifications#events.
                    All types are selected when this attribute is not set.
                  items:
                    enum:
                      - OBJECT_FINALIZE
                      - OBJECT_METADATA_UPDATE
                      - OBJECT_DELETE
                      - OBJECT_ARCHIVE
                    type: string
                  type: array
                pubsub:
                  description: Attributes related to the configuration of Pub/Sub
                    resources associated with the Cloud Storage bucket.
                  oneOf:
                    - required:
                        - project
                    - required:
                        - topic
                  properties:
                    project:
                      description: Name of the GCP project where Pub/Sub resources
                        associated with the Cloud Storage bucket are to be created.
                        Mutually exclusive with 'topic' which, if supplied, already
                        contains the project name.
                      pattern: ^[a-z][a-z0-9-]{3,29}$
                      type: string
                    topic:
                      description: Full resource name of the Pub/Sub topic where change
                        notifications originating from the configured bucket are sent
                        to. If not supplied, a topic is created on behalf of the user,
                        in the GCP project referenced by the 'project' attribute.
                        The expected format is described at https://cloud.google.com/pubsub/docs/admin#resource_names
                      pattern: ^projects\/[a-z][a-z0-9-]{3,29}\/topics\/[a-zA-Z][\w-.~%+]{2,254}$
                      type: string
                  type: object
                serviceAccountKey:
                  description: Service account key used to authenticate the event
                    source and allow it to interact with Google Cloud APIs. Only the
                    JSON format is supported.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the service account key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the service account key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                sink:
                  description: The destination of events received via change notifications.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - bucket
                - pubsub
                - serviceAccountKey
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                notificationID:
                  description: ID of the Cloud Storage bucket notification configuration
                    managed by the event source.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
                subscription:
                  description: Resource name of the Pub/Sub subscription currently
                    used by the event source for pulling change notifications.
                  type: string
                topic:
                  description: Resource name of the Pub/Sub topic where change notifications
                    are currently sent to.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: httppollersources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: HTTPPollerSource
    plural: httppollersources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for sourcing events by polling HTTP/S
            endpoints.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                basicAuthPassword:
                  description: Password to set in HTTP requests that require HTTP
                    Basic authentication.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the password.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the password.
                      properties:
                        key:
                          description: Key from the Secret object.
                          type: string
                        name:
                          description: Name of the Secret object.
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                basicAuthUsername:
                  description: User name to set in HTTP requests that require HTTP
                    Basic authentication.
                  type: string
                caCertificate:
                  description: CA certificate in X.509 format the HTTP client should
                    use to verify the identity of remote servers when communicating
                    over TLS.
                  type: string
                endpoint:
                  description: HTTP/S URL of the endpoint to poll data from.
                  format: url
                  pattern: ^https?:\/\/.+$
                  type: string
                eventSource:
                  description: 'Value of the CloudEvents ''source'' attribute to set
                    on ingested events. Identifies the context in which an event happened.
                    Must be expressed as a URI-reference. Please refer to the CloudEvents
                    specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#source-1'
                  type: string
                eventType:
                  description: 'Value of the CloudEvents ''type'' attribute to set
                    on ingested events. Describes the type of event related to the
                    originating occurrence. Please refer to the CloudEvents specification
                    for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#type'
                  type: string
                headers:
                  additionalProperties:
                    type: string
                  description: HTTP headers to include in HTTP requests sent to the
                    endpoint.
                  type: object
                interval:
                  description: Duration which defines how often the HTTP/S endpoint
                    should be polled. Expressed as a duration string, which format
                    is documented at https://pkg.go.dev/time#ParseDuration.
                  type: string
                method:
                  description: HTTP request method to use in requests to the specified
                    'endpoint'.
                  enum:
                    - GET
                    - POST
                    - PUT
                    - PATCH
                    - DELETE
                  type: string
                sink:
                  description: The destination of events generated by polling the
                    HTTP/S endpoint.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
                skipVerify:
                  description: Controls whether the HTTP client verifies the server's
                    certificate chain and host name when communicating over TLS.
                  type: boolean
              required:
                - eventType
                - method
                - endpoint
                - interval
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.oracle.cloud.monitoring\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: ocimetricssources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: OCIMetricsSource
    plural: ocimetricssources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Oracle Cloud Infrastructure (OCI)
            Metrics.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                metrics:
                  description: Array of metrics to poll for.
                  items:
                    properties:
                      metricsNamespace:
                        description: Type of metrics to pull from such as oci_computeagent,
                          oci_apigateway, oci_vnc, or oci_compute_infrastructure_health.
                        type: string
                      metricsQuery:
                        description: Metrics query to send based off of OCI Monitoring
                          Query Language.
                        type: string
                      name:
                        description: Used as the event source for the metric.
                        type: string
                      oracleCompartment:
                        description: OCID of the target compartment (if not specified,
                          default to the value of 'oracleTenancy').
                        type: string
                    required:
                      - name
                      - metricsNamespace
                      - metricsQuery
                    type: object
                  type: array
                metricsPollingFrequency:
                  description: Polling frequency of the OCI API for metrics details
                    (supported values 1m-60m, 1h-24h, 1d).
                  type: string
                oracleApiPrivateKey:
                  description: PEM encoded API private key that has access to the
                    OCI metrics API.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the private key.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the
                        private key.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                oracleApiPrivateKeyFingerprint:
                  description: MD5 fingerprint of 'oracleApiPrivateKey'.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the fingerprint.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the
                        fingerprint.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                oracleApiPrivateKeyPassphrase:
                  description: Passphrase to unlock the 'oracleApiPrivateKey'.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the passphrase.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the
                        passphrase.
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                oracleRegion:
                  description: OCI target region.
                  type: string
                oracleTenancy:
                  description: OCID of the target tenancy.
                  type: string
                oracleUser:
                  description: OCID of the target user associated with the 'oracleApiPrivateKey'.
                  type: string
                sink:
                  description: The destination of events sourced from OCI metrics.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - oracleApiPrivateKey
                - oracleApiPrivateKeyPassphrase
                - oracleApiPrivateKeyFingerprint
                - oracleTenancy
                - oracleUser
                - oracleRegion
                - metrics
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.salesforce.stream.message\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: salesforcesources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: SalesforceSource
    plural: salesforcesources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Salesforce.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                apiVersion:
                  description: Salesforce API version.
                  type: string
                auth:
                  description: Authentication method to interact with the Salesforce
                    API.
                  properties:
                    certKey:
                      description: Certificate key to sign authentication requests
                        with the Salesforce API.
                      oneOf:
                        - required:
                            - value
                        - required:
                            - valueFromSecret
                      properties:
                        value:
                          description: Literal value of the certificate key.
                          type: string
                        valueFromSecret:
                          description: A reference to a Kubernetes Secret containing
                            the certificate key.
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                            - key
                          type: object
                      type: object
                    clientID:
                      description: Client ID.
                      type: string
                    server:
                      description: Salesforce server.
                      type: string
                    user:
                      description: Salesforce user.
                      type: string
                  required:
                    - clientID
                    - server
                    - user
                    - certKey
                  type: object
                sink:
                  description: The destination of events received via Salesforce streams.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
                subscription:
                  description: Subscription to a Salesforce channel.
                  properties:
                    channel:
                      type: string
                    replayID:
                      type: integer
                  required:
                    - channel
                  type: object
              required:
                - auth
                - subscription
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.slack.events\" }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: slacksources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: SlackSource
    plural: slacksources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Slack.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                appID:
                  description: ID which identifies the Slack application generating
                    this event. It helps identifying the App that sources events when
                    multiple Slack applications share the same endpoint.
                  type: string
                signingSecret:
                  description: Signing secret to authenticate Slack callbacks.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the signing secret.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the
                        signing secret.
                      properties:
                        key:
                          description: Key from the Secret object.
                          type: string
                        name:
                          description: Name of the Secret object.
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                sink:
                  description: The destination of events generated from Slack callbacks.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                address:
                  description: Public address of the HTTP/S endpoint that is receiving
                    Slack callbacks.
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.triggermesh.twilio.sms\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: twiliosources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: TwilioSource
    plural: twiliosources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Twilio.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                sink:
                  description: The destination of events received by the webhook.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: webhooksources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: WebhookSource
    plural: webhooksources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for receiving arbitrary events over
            a HTTP/S webhook.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                basicAuthPassword:
                  description: Password HTTP clients must set to authenticate with
                    the webhook using HTTP Basic authentication.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the password.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the password.
                      properties:
                        key:
                          description: Key from the Secret object.
                          type: string
                        name:
                          description: Name of the Secret object.
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                basicAuthUsername:
                  description: User name HTTP clients must set to authenticate with
                    the webhook using HTTP Basic authentication.
                  type: string
                eventSource:
                  description: 'Value of the CloudEvents ''source'' attribute to set
                    on ingested events. Identifies the context in which an event happened.
                    Must be expressed as a URI-reference. Please refer to the CloudEvents
                    specification for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#source-1'
                  type: string
                eventType:
                  description: 'Value of the CloudEvents ''type'' attribute to set
                    on ingested events. Describes the type of event related to the
                    originating occurrence. Please refer to the CloudEvents specification
                    for more details: https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#type'
                  type: string
                sink:
                  description: The destination of events generated from requests to
                    the webhook.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              required:
                - eventType
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                address:
                  description: Public address of the HTTP/S endpoint exposing the
                    webhook.
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.zendesk.ticket.created\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/source: 'true'
    eventing.knative.dev/source: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: zendesksources.sources.triggermesh.io
spec:
  group: sources.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - sources
    kind: ZendeskSource
    plural: zendesksources
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event source for Zendesk.
          properties:
            spec:
              description: Desired state of the event source.
              properties:
                email:
                  description: Email of the Zendesk user to authenticate requests
                    to the Zendesk API.
                  type: string
                sink:
                  description: The destination of events generated from requests to
                    the Zendesk webhook.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
                subdomain:
                  description: Name of the Zendesk subdomain.
                  pattern: ^[a-z0-9][a-z0-9-]+[a-z0-9]$
                  type: string
                token:
                  description: Zendesk API token. Allows the source to interact with
                    the Zendesk API.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the API token.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret containing the
                        API token.
                      properties:
                        key:
                          description: Key from the Secret object.
                          type: string
                        name:
                          description: Name of the Secret object.
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                webhookPassword:
                  description: Password Zendesk requests must set to authenticate
                    with the webhook using HTTP Basic authentication.
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      description: Literal value of the password.
                      type: string
                    valueFromSecret:
                      description: A reference to a Kubernetes Secret object containing
                        the password.
                      properties:
                        key:
                          description: Key from the Secret object.
                          type: string
                        name:
                          description: Name of the Secret object.
                          type: string
                      required:
                        - name
                        - key
                      type: object
                  type: object
                webhookUsername:
                  description: User name Zendesk requests must set to authenticate
                    with the webhook using HTTP Basic authentication.
                  type: string
              required:
                - subdomain
                - email
                - token
                - webhookUsername
                - webhookPassword
                - sink
              type: object
            status:
              description: Reported status of the event source.
              properties:
                address:
                  description: Public address of the HTTP/S endpoint that is subscribed
                    for receiving Zendesk webhhook events.
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.alibaba.oss.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: alibabaosstargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AlibabaOSSTarget
    plural: alibabaosstargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Alibaba Object Storage Service.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                accessKeyID:
                  description: Alibaba SDK access key id as registered. For more information
                    on how to create an access key pair, please refer to https://www.alibabacloud.com/help/doc-detail/53045.htm?spm=a2c63.p38356.879954.9.23bc7d91ARN6Hy#task968.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                accessKeySecret:
                  description: Alibaba SDK access key secret as registered. For more
                    information on how to create an access key pair, please refer
                    to https://www.alibabacloud.com/help/doc-detail/53045.htm?spm=a2c63.p38356.879954.9.23bc7d91ARN6Hy#task968.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                bucket:
                  description: The unique container to store objects in OSS.
                  type: string
                endpoint:
                  description: The domain name used to access the OSS. For more information,
                    please refer to the region and endpoint guide at https://www.alibabacloud.com/help/doc-detail/31837.htm?spm=a2c63.p38356.879954.8.23bc7d91ARN6Hy#concept-zt4-cvy-5db
                  pattern: ^oss-([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{1,3}$
                  type: string
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
              required:
                - accessKeyID
                - accessKeySecret
                - bucket
                - endpoint
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  description: Array of cloud events this target will accept for processing.
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.comprehend.result\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awscomprehendtargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSComprehendTarget
    plural: awscomprehendtargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: An event targte for sending messages to the AWS Comprehend
            API.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                awsApiKey:
                  description: API Key to interact with the Comprehend API. For more
                    information about AWS security credentials, please refer to the
                    AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Secret to interact with the Comprehend API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                language:
                  description: Language code to use for Comprehend. Available languages
                    can be found at https://docs.aws.amazon.com/comprehend/latest/dg/supported-languages.html
                  type: string
                region:
                  description: Code of the AWS region to use for the Comprehend API.
                    Available region codes are documented in the AWS General Reference
                    at https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints.
                  type: string
              required:
                - region
                - language
                - awsApiSecret
                - awsApiKey
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.dynamodb.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awsdynamodbtargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSDynamoDBTarget
    plural: awsdynamodbtargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for AWS DynamoDB.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                arn:
                  description: ARN of the DynamoDB table to post events to. The expected
                    format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazondynamodb.html
                  pattern: ^arn:aws(-cn|-us-gov)?:dynamodb:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:table\/[a-zA-Z0-9-_.]{3,255}$
                  type: string
                awsApiKey:
                  description: API Key to interact with the Amazon DynamoDB API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Key to interact with the Amazon DynamoDB API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - arn
                - awsApiSecret
                - awsApiKey
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.kinesis.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awskinesistargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSKinesisTarget
    plural: awskinesistargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: An event target that can stream events into an AWS Kinesis
            stream.
          properties:
            spec:
              properties:
                arn:
                  description: ARN of the Kinesis stream that will receive events.
                    The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonkinesis.html
                  pattern: ^arn:aws(-cn|-us-gov)?:kinesis:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:stream/.+$
                  type: string
                awsApiKey:
                  description: API Key to interact with the Amazon Kinesis API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Secret to interact with the Amazon Kinesis API.
                    For more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                discardCloudEventContext:
                  description: Produce a new cloud event based on the response from
                    the Kinesis invocation.
                  type: boolean
                partition:
                  description: A Kinesis partition name is required for the target
                    to know where to stream the events to.
                  type: string
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.lambda.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awslambdatargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSLambdaTarget
    plural: awslambdatargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for AWS Lambda.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                arn:
                  description: ARN of the Lambda function that will receive events.
                    The expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html
                  pattern: ^arn:aws(-cn|-us-gov)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:(function|layer|event-source-mapping):.+$
                  type: string
                awsApiKey:
                  description: API Key to interact with the Amazon Lambda API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Secret to interact with the Amazon Lambda API.
                    For more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                discardCloudEventContext:
                  description: Produce a new cloud event based on the response from
                    the lambda function.
                  type: boolean
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.s3.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.awss3.object.put\"\
      \ },\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awss3targets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSS3Target
    plural: awss3targets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: An event target that can stream events into an AWS S3 bucket.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                arn:
                  description: ARN of the S3 bucket that will receive events. The
                    expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazons3.html
                  pattern: ^arn:aws(-cn|-us-gov)?:s3:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                awsApiKey:
                  description: API Key to interact with the Amazon S3 API. For more
                    information about AWS security credentials, please refer to the
                    AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Secret to interact with the Amazon S3 API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                discardCloudEventContext:
                  description: Produce a new cloud event based on the response from
                    the Kinesis invocation.
                  type: boolean
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.sns.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awssnstargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSSNSTarget
    plural: awssnstargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for AWS Simple Notification Service.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                arn:
                  description: ARN of the SNS queue that will receive events. The
                    expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonsns.html
                  pattern: ^arn:aws(-cn|-us-gov)?:sns:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                awsApiKey:
                  description: API Key to interact with the SNS API. For more information
                    about AWS security credentials, please refer to the AWS General
                    Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Secret to interact with the SNS API. For more information
                    about AWS security credentials, please refer to the AWS General
                    Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                discardCloudEventContext:
                  description: Produce a new cloud event based on the response from
                    the SNS API call.
                  type: boolean
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.aws.sqs.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: awssqstargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: AWSSQSTarget
    plural: awssqstargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for AWS Simple Queue Service.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                arn:
                  description: ARN of the SQS queue that will receive events. The
                    expected format is documented at https://docs.aws.amazon.com/service-authorization/latest/reference/list_awslambda.html
                  pattern: ^arn:aws(-cn|-us-gov)?:sqs:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:.+$
                  type: string
                awsApiKey:
                  description: API Key to interact with the Amazon SQS API. For more
                    information about AWS security credentials, please refer to the
                    AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                awsApiSecret:
                  description: API Secret to interact with the Amazon SQS API. For
                    more information about AWS security credentials, please refer
                    to the AWS General Reference at https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                discardCloudEventContext:
                  description: Produce a new cloud event based on the response from
                    the lambda function.
                  type: boolean
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: confluenttargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: ConfluentTarget
    plural: confluenttargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Confluent Kafka.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                bootstrapServers:
                  description: Array of Confluent Kafka servers used to bootstrap
                    the connection.
                  items:
                    minLength: 1
                    type: string
                  type: array
                discardCloudEventContext:
                  description: Produce a new cloud event based on the response from
                    calling Kafka.
                  type: boolean
                password:
                  description: Confluent account password when using SASL.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                saslMechanism:
                  description: When using the "saslSsl" securityProtocol attribute,
                    indicate which mechanism to use. This can be "Gssapi", "OAuthBearer",
                    "Plain", "ScramSha256", and "ScramSha512".
                  type: string
                securityProtocol:
                  description: Encryption protocol to use for connecting to Confluent
                    Kafka. This can be "Plaintext", "SslPlaintext", "SaslSsl", or
                    "Ssl". Additional information can be found at https://docs.confluent.io/platform/current/connect/security.html
                  type: string
                topic:
                  description: Topic name to stream the target events to.
                  minLength: 1
                  type: string
                topicPartitions:
                  description: The number of partitions used by the topic to stream
                    an event to.
                  type: integer
                topicReplicationFactor:
                  description: The number of replicas required to stream to the topic.
                  type: integer
                username:
                  description: Confluent account username when using SASL.
                  minLength: 1
                  type: string
              required:
                - username
                - password
                - topic
                - bootstrapServers
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.datadog.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.datadog.metric.submit\"\
      \ },\n  { \"type\": \"io.triggermesh.datadog.event.post\" },\n  { \"type\":\
      \ \"io.triggermesh.datadog.log.send\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: datadogtargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: DatadogTarget
    plural: datadogtargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Datadog.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                apiKey:
                  description: Datadog API Key with access to receive metrics.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
              required:
                - apiKey
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.elasticsearch.doc.index.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.elasticsearch.doc.index\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: elasticsearchtargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: ElasticsearchTarget
    plural: elasticsearchtargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Elasticsearch.
          properties:
            spec:
              properties:
                connection:
                  description: Attributes for connecting to a private Elasticsearch
                    instance or Elastic cloud.
                  oneOf:
                    - required:
                        - username
                        - password
                    - required:
                        - apiKey
                  properties:
                    addresses:
                      description: Hostname/IP Address of the Elasticsearch instance
                        to stream events to.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    apiKey:
                      description: API Key to connect to the Elasticsearch instance.
                      properties:
                        secretKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      type: object
                    password:
                      description: Elasticsearch instance password.
                      properties:
                        secretKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      type: object
                    skipVerify:
                      description: Skip verification of SSL/TLS certificates.
                      type: boolean
                    username:
                      description: Elasticsearch instance username.
                      type: string
                  required:
                    - addresses
                  type: object
                discardCloudEventContext:
                  description: Discard cloud event metadata from payload being sent
                    to Elasticsearch.
                  type: boolean
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
                indexName:
                  description: Elasticsearch index to stream the events to.
                  type: string
              required:
                - connection
                - indexName
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"com.google.cloud.storage.object.insert.response\"\
      \ },\n  { \"type\": \"*\" }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"com.google.cloud.storage.object.insert\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudstoragetargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: GoogleCloudStorageTarget
    plural: googlecloudstoragetargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Google Cloud Storage.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                bucketName:
                  description: GCP Storage bucket to stream events to.
                  type: string
                credentialsJson:
                  description: GCP credentials used to programmatically interact with
                    Google Cloud Storage. For additional information, refer to https://cloud.google.com/docs/authentication/production
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
              required:
                - credentialsJson
                - bucketName
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.trigermesh.google.workflows.run.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.trigermesh.google.workflows.run\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudworkflowstargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: GoogleCloudWorkflowsTarget
    plural: googlecloudworkflowstargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Google Cloud Workflows.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                credentialsJson:
                  description: GCP credentials used to programmatically interact with
                    Google Cloud Storage. For additional information, refer to https://cloud.google.com/docs/authentication/production
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
              required:
                - credentialsJson
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.google.firestore.write.response\"\
      \ },\n  { \"type\": \"io.triggermesh.google.firestore.query.tables.response\"\
      \ },\n  { \"type\": \"io.triggermesh.google.firestore.query.table.response\"\
      \ },\n  { \"type\": \"*\" }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.google.firestore.write\"\
      \ },\n  { \"type\": \"io.triggermesh.google.firestore.query.tables\" },\n  {\
      \ \"type\": \"io.triggermesh.google.firestore.query.table\" },\n  {\"type\"\
      : \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlecloudfirestoretargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: GoogleCloudFirestoreTarget
    plural: googlecloudfirestoretargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Google Cloud Firestore.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                credentialsJson:
                  description: GCP credentials used to programmatically interact with
                    Google Cloud Storage. For additional information, refer to https://cloud.google.com/docs/authentication/production
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                defaultCollection:
                  description: Default firestore collection to stream events into.
                  type: string
                discardCloudEventContext:
                  description: Indicate whether the full cloud event payload should
                    be sent to the target, or the data component only.
                  type: boolean
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
                projectID:
                  description: Google Cloud Project ID associated with the firestore
                    database.
                  type: string
              required:
                - credentialsJson
                - projectID
                - defaultCollection
              type: object
            status:
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.googlesheet.append\"\
      \ },\n  { \"type\": \"*\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: googlesheettargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: GoogleSheetTarget
    plural: googlesheettargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for appending or updating a Googlesheet.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                defaultPrefix:
                  description: A prefix to be used when creating a new sheet inside
                    a document.
                  minLength: 1
                  type: string
                googleServiceAccount:
                  description: Google service account token used to authenticate access
                    to the Googlesheet document.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          minLength: 1
                          type: string
                        name:
                          minLength: 1
                          type: string
                      type: object
                  type: object
                id:
                  description: Googlesheet ID associated with the document being targeted.
                  minLength: 1
                  type: string
              required:
                - id
                - googleServiceAccount
                - defaultPrefix
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"org.graphql.query.result\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.graphql.query\"\
      \ },\n  { \"type\": \"io.triggermesh.graphql.query.raw\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: hasuratargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: HasuraTarget
    plural: hasuratargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for GraphQL based systems such as
            Hasura.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                admin:
                  description: An API token that acts as an alternative to the jwt
                    token used to connect to Hasura.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                defaultRole:
                  description: The default role a query from this target should assume
                    when it is not specified in the event payload.
                  type: string
                endpoint:
                  description: REST endpoint for the GraphQL instance.
                  minLength: 1
                  type: string
                jwt:
                  description: A JavaScript Web Token (JWT) containing the credentials
                    required to connect to Hasura.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                queries:
                  additionalProperties:
                    type: string
                  description: Preload GraphQL queries the target can respond to.
                    When used, the queries are given a unique name that is referenced
                    as a part of the cloudevent type 'io.triggermesh.graphql.query'.
                  type: object
              required:
                - endpoint
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: httptargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: HTTPTarget
    plural: httptargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for generic HTTP endpoints.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                basicAuthPassword:
                  description: When using HTTP Basic authentication, the password
                    to connect to the target service.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                basicAuthUsername:
                  description: When using HTTP Basic authentication, the username
                    to connect to the target service.
                  type: string
                caCertificate:
                  description: The CA certificate used to sign the certificated used
                    by the target server.
                  type: string
                endpoint:
                  description: An HTTP based REST endpoint to stream events to.
                  format: url
                  pattern: ^https?:\/\/.+$
                  type: string
                headers:
                  additionalProperties:
                    type: string
                  description: Additional headers required to be set when communicating
                    wiht the target service.
                  type: object
                method:
                  description: The HTTP method to use for the request.
                  enum:
                    - GET
                    - POST
                    - PUT
                    - PATCH
                    - DELETE
                  type: string
                oauthClientID:
                  description: When using OAuth, the client id used to authenticate
                    against the target service.
                  type: string
                oauthClientSecret:
                  description: When using OAuth, the client secret used to authenticate
                    against the target service
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                oauthScopes:
                  description: When using OAuth, the scopes required by the target
                    to use the service.
                  items:
                    type: string
                  type: array
                oauthTokenURL:
                  description: When using OAuth, the Token URL used to sign the request
                    against.
                  type: string
                response:
                  properties:
                    eventSource:
                      description: EventSource is an optional but recommended field
                        for identifying the instance producing the events.
                      type: string
                    eventType:
                      description: EventType is required to set the Type for the ingested
                        event.
                      minLength: 1
                      type: string
                  required:
                    - eventType
                  type: object
                skipVerify:
                  default: false
                  description: Skip validation and verification of the SSL/TLS certificate.
                  type: boolean
              required:
                - endpoint
                - method
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: infratargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: InfraTarget
    plural: infratargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target to manipulate cloud events using JavaScript.
            An event is consumed by the target, and a new event is produced in the
            response.
          properties:
            spec:
              anyOf:
                - required:
                    - script
                - required:
                    - state
              description: Desired state of event target.
              properties:
                script:
                  description: JavaScript code to invoke when an event comes in.
                  properties:
                    code:
                      type: string
                    timeout:
                      type: integer
                  required:
                    - code
                  type: object
                state:
                  description: Indicate whether stateful headers should be created
                    (ensure), propagated (propagate), or dropped (none).
                  properties:
                    bridge:
                      type: string
                    headersPolicy:
                      enum:
                        - ensure
                        - propagate
                        - none
                      type: string
                  type: object
                typeLoopProtection:
                  description: Prevent the InfraTarget from consuming events it just
                    produced.
                  type: boolean
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.jira.issue\"\
      \ },\n  { \"type\": \"io.triggermesh.jira.custom.response\" }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.jira.issue.create\"\
      \ },\n  { \"type\": \"io.triggermesh.jira.issue.get\" },\n  { \"type\": \"io.triggermesh.jira.custom\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: jiratargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: JiraTarget
    plural: jiratargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Jira.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                auth:
                  description: Credentials to authenticate against the Jira instance.
                  properties:
                    token:
                      description: Jira API token associated with the Jira user.
                      properties:
                        secretKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      type: object
                    user:
                      description: Jira username for the target to use.
                      minLength: 1
                      type: string
                  required:
                    - user
                    - token
                  type: object
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
                url:
                  description: Jira instance url.
                  format: url
                  pattern: ^https?:\/\/.+$
                  type: string
              required:
                - auth
                - url
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.logz.ship.response\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: logztargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: LogzTarget
    plural: logztargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Logz.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
                logsListenerURL:
                  description: Logz listener host to stream events to.
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: string
                shippingToken:
                  description: API token used to authenticate the event being streamed.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - shippingToken
                - logsListenerURL
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: oracletargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: OracleTarget
    plural: oracletargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Oracle Cloud (OCI).
          properties:
            spec:
              description: Desired state of event target.
              oneOf:
                - required:
                    - function
              properties:
                function:
                  description: Invoke a serverless function on the Oracle Cloud.
                  properties:
                    function:
                      description: The Oracle Cloud ID (OCID) of the function being
                        invoked.
                      type: string
                  type: object
                oracleApiPrivateKey:
                  description: Oracle API Private Key to sign each request to the
                    Oracle Cloud. For details on how to create a private keypair for
                    Oracle Cloud, refer to https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                oracleApiPrivateKeyFingerprint:
                  description: MD5 fingerprint to identify the keypair associated
                    with the key used to sign each request to the Oracle Cloud. For
                    details on how to create a private keypair for Oracle Cloud, refer
                    to https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                oracleApiPrivateKeyPassphrase:
                  description: Passphrase to unlock the private key used to sign each
                    request to the Oracle Cloud. For details on how to create a private
                    keypair for Oracle Cloud, refer to https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                oracleRegion:
                  description: The Oracle Cloud region containing the service being
                    executed. A full list of supported regions can be found at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                  type: string
                oracleTenancy:
                  description: The Oracle Cloud ID (OCID) of the tenant containing
                    the service to be used on the Oracle Cloud.
                  type: string
                oracleUser:
                  description: The Oracle Cloud ID (OCID) of the user who owns the
                    key used to interact with the Oracle Cloud.
                  type: string
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.salesforce.apicall.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.salesforce.apicall\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: salesforcetargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: SalesforceTarget
    plural: salesforcetargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Salesforce.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                apiVersion:
                  description: Salesforce API version to use for the target's integration
                    with Salesforce.
                  pattern: v\d+\.\d+$
                  type: string
                auth:
                  description: Attributes required to setup OAuth authentication with
                    Salesforce. To create the credentials, refer to https://help.salesforce.com/articleView?id=sf.remoteaccess_oauth_jwt_flow.htm
                  properties:
                    certKey:
                      description: Salesforce requires a certificate to facilitate
                        the authentication flow.
                      properties:
                        secretKeyRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      type: object
                    clientID:
                      description: OAuth Client ID used to identify the target.
                      minLength: 1
                      type: string
                    server:
                      description: The Salesforce authentication URL associated with
                        the instance being used.
                      format: uri
                      pattern: ^https?:\/\/.+$
                      type: string
                    user:
                      description: Username associated with the Salesforce account.
                      minLength: 1
                      type: string
                  required:
                    - clientID
                    - server
                    - user
                    - certKey
                  type: object
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
              required:
                - auth
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.sendgrid.email.send.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.sendgrid.email.send\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: sendgridtargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: SendGridTarget
    plural: sendgridtargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Sendgrid.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                apiKey:
                  description: The Sendgrid API key used to authenticate access.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                defaultFromEmail:
                  description: Default sender email address for sending mail via Sendgrid.
                  type: string
                defaultFromName:
                  description: Default name to use for the from field when sending
                    email via Sendgrid.
                  type: string
                defaultMessage:
                  description: Default message to use for all email sent via this
                    target.
                  type: string
                defaultSubject:
                  description: Default subject to use for email sent via this target
                  type: string
                defaultToEmail:
                  description: Default email address to send mail to via Sendgrid.
                  type: string
                defaultToName:
                  description: Default name to use for the to field when sending email
                    via Sendgrid.
                  type: string
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
              required:
                - apiKey
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"com.slack.webapi.*\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: slacktargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: SlackTarget
    plural: slacktargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Slack Web API.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                token:
                  description: Slack API token used to interface with Slack. Consult
                    the Slack API documenation for details on how to setup an app
                    for the target https://api.slack.com/web#authentication
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - token
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: splunktargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: SplunkTarget
    plural: splunktargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Splunk.
          properties:
            spec:
              properties:
                endpoint:
                  description: URL of the HTTP Event Collector (HEC). Only the scheme,
                    hostname, and port (optionally) are evaluated, the URL path is
                    trimmed if present. see https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#Enable_HTTP_Event_Collector
                  format: url
                  pattern: ^https?:\/\/.+$
                  type: string
                index:
                  description: Name of the index to send events to. When undefined,
                    events are sent to the default index defined in the HEC token's
                    configuration.
                  pattern: ^[\w-]+$
                  type: string
                skipTLSVerify:
                  description: Control whether the target should verify the SSL/TLS
                    certificate used by the event collector.
                  type: boolean
                token:
                  description: Token for authenticating requests against the HEC.
                    See https://docs.splunk.com/Documentation/Splunk/latest/Data/UsetheHTTPEventCollector#About_Event_Collector_tokens
                  oneOf:
                    - required:
                        - value
                    - required:
                        - valueFromSecret
                  properties:
                    value:
                      format: guid
                      pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
                      type: string
                    valueFromSecret:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - endpoint
                - token
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.tekton.run\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: tektontargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: TektonTarget
    plural: tektontargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Tekton.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                reapPolicy:
                  description: Specify when successful or failed jobs should remain
                    before being cleand out.
                  properties:
                    fail:
                      description: Minimum age of a failed run object before automatic
                        purging
                      pattern: ^\d+[mhd]$
                      type: string
                    success:
                      description: Minimum age of a successfully completed run object
                        before automatic purging
                      pattern: ^\d+[mhd]$
                      type: string
                  type: object
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.twilio.sms.send.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.twilio.sms.send\"\
      \ }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: twiliotargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: TwilioTarget
    plural: twiliotargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Twilio.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                defaultPhoneFrom:
                  description: Default phone number to send the message from.
                  type: string
                defaultPhoneTo:
                  description: Default phone number to send the message to.
                  type: string
                eventOptions:
                  description: 'When should this target generate a response event
                    for processing: always, on error, or never'
                  properties:
                    payloadPolicy:
                      enum:
                        - always
                        - error
                        - never
                      type: string
                  type: object
                sid:
                  description: Twilio account service ID (SID)
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
                token:
                  description: Twilio API Token.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - sid
                - token
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"io.triggermesh.uipath.job.start\"\
      \ },\n  { \"type\": \"io.triggermesh.uipath.queue.post\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: uipathtargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: UiPathTarget
    plural: uipathtargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for UiPath.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                accountLogicalName:
                  description: The unique site URL used to identify the UiPath tenant.
                  type: string
                clientID:
                  description: OAuth ClientID registered by UiPath to identify the
                    target. For details on registering a new client, please see https://docs.uipath.com/orchestrator/reference/using-oauth-for-external-apps
                  type: string
                organizationUnitID:
                  description: A grouping of orchestrator components within a tenant.
                    For additional details, please see https://docs.uipath.com/orchestrator/docs/about-organization-units
                  type: string
                processName:
                  description: UiProccess encompassing the robot. For additional details,
                    refer to https://docs.uipath.com/orchestrator/docs/about-processes
                  type: string
                robotName:
                  description: Robot to invoke. For additional details, refer to https://docs.uipath.com/orchestrator/docs/about-robots
                  type: string
                tenantName:
                  description: UiPath tenant name. For additional details, refer to
                    https://docs.uipath.com/orchestrator/docs/about-tenants
                  type: string
                userKey:
                  description: UiPath user refresh token to support OAuth based authentication.
                    For additional details, refer to https://docs.uipath.com/orchestrator/reference/using-oauth-for-external-apps
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - organizationUnitID
                - clientID
                - accountLogicalName
                - tenantName
                - processName
                - robotName
                - userKey
              type: object
            status:
              description: Reported status of the event target.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: "[\n  { \"type\": \"io.triggermesh.targets.response\"\
      \ }\n]\n"
    registry.triggermesh.io/acceptedEventTypes: "[\n  { \"type\": \"com.zendesk.ticket.create\"\
      \ },\n  { \"type\": \"com.zendesk.ticket.tag.add\" }\n]\n"
  labels:
    duck.knative.dev/addressable: 'true'
    knative.dev/crd-install: 'true'
    triggermesh.io/crd-install: 'true'
  name: zendesktargets.targets.triggermesh.io
spec:
  group: targets.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - targets
    kind: ZendeskTarget
    plural: zendesktargets
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh event target for Zendesk.
          properties:
            spec:
              description: Desired state of event target.
              properties:
                email:
                  description: Default registered email address for interacting with
                    Zendesk.
                  type: string
                subdomain:
                  description: User's subdomain on zendesk being targeted.
                  type: string
                subject:
                  description: Default subject line to use for tickets created using
                    this target.
                  type: string
                token:
                  description: Zendesk API token for interacting with Zendesk.
                  properties:
                    secretKeyRef:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                  type: object
              required:
                - subdomain
                - email
              type: object
            status:
              description: Reported status of the event target.
              properties:
                acceptedEventTypes:
                  items:
                    type: string
                  type: array
                address:
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - source
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    triggermesh.io/crd-install: 'true'
  name: filters.routing.triggermesh.io
spec:
  group: routing.triggermesh.io
  names:
    categories:
      - all
      - triggermesh
      - routing
    kind: Filter
    plural: filters
    shortNames:
      - fl
    singular: filter
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: Address
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh content-based events filter.
          properties:
            spec:
              description: Desired state of the filter.
              properties:
                expression:
                  description: Google CEL-like expression string.
                  type: string
                sink:
                  description: Sink is a reference to an object that will resolve
                    to a uri to use as the sink.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out.'
                          type: string
                      type: object
                    uri:
                      description: URI can be an absolute URL(non-empty scheme and
                        non-empty host) pointing to the target or a relative URI.
                        Relative URIs will be resolved using the base URI retrieved
                        from Ref.
                      type: string
                  type: object
              required:
                - expression
                - sink
              type: object
            status:
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    triggermesh.io/crd-install: 'true'
  name: splitters.routing.triggermesh.io
spec:
  group: routing.triggermesh.io
  names:
    categories:
      - all
      - triggermesh
      - routing
    kind: Splitter
    plural: splitters
    shortNames:
      - spl
    singular: splitter
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: Address
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh content-based events splitter.
          properties:
            spec:
              description: Desired state of the splitter.
              properties:
                ceContext:
                  description: Context attributes to set on produced CloudEvents.
                  properties:
                    extensions:
                      additionalProperties:
                        type: string
                      description: Additional context extensions to set on produced
                        CloudEvents.
                      type: object
                    source:
                      description: CloudEvent "source" context attribute. Accepts
                        a JSONPath expressions in brackets (e.g. "user/{.name}").
                      type: string
                    type:
                      description: CloudEvent "type" context attribute.
                      type: string
                  required:
                    - type
                    - source
                  type: object
                path:
                  description: JSONPath expression representing the key containing
                    the data array to split. Defaults to the root.
                  type: string
                sink:
                  description: Sink is a reference to an object that will resolve
                    to a uri to use as the sink.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out.'
                          type: string
                      type: object
                    uri:
                      description: URI can be an absolute URL(non-empty scheme and
                        non-empty host) pointing to the target or a relative URI.
                        Relative URIs will be resolved using the base URI retrieved
                        from Ref.
                      type: string
                  type: object
              required:
                - ceContext
                - sink
              type: object
            status:
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    triggermesh.io/crd-install: 'true'
  name: functions.extensions.triggermesh.io
spec:
  group: extensions.triggermesh.io
  names:
    categories:
      - all
      - triggermesh
      - extensions
    kind: Function
    plural: functions
    shortNames:
      - fn
    singular: function
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: Address
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh Function.
          properties:
            spec:
              description: Desired state of the function.
              properties:
                ceOverrides:
                  description: Defines overrides to control modifications of the event
                    attributes.
                  properties:
                    extensions:
                      properties:
                        source:
                          type: string
                        subject:
                          type: string
                        type:
                          type: string
                      type: object
                  required:
                    - extensions
                  type: object
                code:
                  description: Function code.
                  type: string
                entrypoint:
                  description: Function name to use as an entrypoint.
                  type: string
                eventStore:
                  description: EventStore service connection string.
                  properties:
                    uri:
                      type: string
                  required:
                    - uri
                  type: object
                public:
                  description: Should the function be publicly available.
                  type: boolean
                responseIsEvent:
                  description: Whether function responds with CE payload only or with
                    full event.
                  type: boolean
                runtime:
                  description: Function runtime name. Python, Ruby or Node runtimes
                    are currently supported.
                  enum:
                    - python
                    - ruby
                    - node
                  type: string
                sink:
                  description: Sink is a reference to an object that will resolve
                    to a uri to use as the sink.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out.'
                          type: string
                      type: object
                    uri:
                      description: URI can be an absolute URL(non-empty scheme and
                        non-empty host) pointing to the target or a relative URI.
                        Relative URIs will be resolved using the base URI retrieved
                        from Ref.
                      type: string
                  type: object
              required:
                - runtime
                - entrypoint
                - code
              type: object
            status:
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: transformations.flow.triggermesh.io
spec:
  group: flow.triggermesh.io
  names:
    categories:
      - all
      - knative
      - eventing
      - transformations
    kind: Transformation
    plural: transformations
    shortNames:
      - trn
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: Address
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TriggerMesh CloudEvents transformation engine.
          properties:
            spec:
              description: Desired state of the transformation object.
              properties:
                context:
                  description: CloudEvents Context attributes transformation spec.
                  items:
                    description: The list of transformation operations executed on
                      the event context sequentially.
                    properties:
                      operation:
                        description: Name of the transformation operation.
                        enum:
                          - add
                          - delete
                          - shift
                          - store
                        type: string
                      paths:
                        description: Key-value event pairs to apply the transformations
                          on.
                        items:
                          properties:
                            key:
                              description: JSON path or variable name. Depends on
                                the operation type.
                              nullable: true
                              type: string
                            value:
                              description: JSON path or variable name. Depends on
                                the operation type.
                              nullable: true
                              type: string
                          type: object
                        type: array
                    required:
                      - operation
                    type: object
                  type: array
                data:
                  description: CloudEvents Data transformation spec.
                  items:
                    description: The list of transformation operations executed on
                      the event data sequentially.
                    properties:
                      operation:
                        description: Name of the transformation operation.
                        enum:
                          - add
                          - delete
                          - shift
                          - store
                        type: string
                      paths:
                        description: Key-value event pairs to apply the transformations
                          on.
                        items:
                          properties:
                            key:
                              description: JSON path or variable name. Depends on
                                the operation type.
                              nullable: true
                              type: string
                            value:
                              description: JSON path or variable name. Depends on
                                the operation type.
                              nullable: true
                              type: string
                          type: object
                        type: array
                    required:
                      - operation
                    type: object
                  type: array
                sink:
                  description: The destination of events sourced from the transformation
                    object.
                  oneOf:
                    - required:
                        - ref
                    - required:
                        - uri
                  properties:
                    ref:
                      description: Reference to an addressable Kubernetes object to
                        be used as the destination of events.
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    uri:
                      description: URI to use as the destination of events.
                      format: uri
                      type: string
                  type: object
              type: object
            status:
              description: Reported status of Transformation.
              properties:
                address:
                  description: Address of the HTTP/S endpoint where Transformation
                    is serving incoming CloudEvents.
                  properties:
                    url:
                      type: string
                  type: object
                ceAttributes:
                  description: CloudEvents context attributes overrides.
                  items:
                    properties:
                      source:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      severity:
                        enum:
                          - Error
                          - Warning
                          - Info
                        type: string
                      status:
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                sinkUri:
                  description: URI of the sink where events are currently sent to.
                  format: uri
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
